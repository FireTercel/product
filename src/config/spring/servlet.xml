<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	 					http://www.springframework.org/schema/context 
	 					http://www.springframework.org/schema/context/spring-context-3.0.xsd
	 					http://www.springframework.org/schema/mvc 
	 					http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	
	<context:annotation-config />
	<!-- 1、进行普遍扫描 -->
	<context:component-scan base-package="com.clothes.controller.*">
		<context:exclude-filter type="annotation"
	expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	<!-- 5.1、避免IE执行AJAX时,返回JSON出现下载文件 -->
 	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
  		<property name="supportedMediaTypes">
   			<list>
    			<value>text/html;charset=UTF-8</value>
   			</list>
  		</property>
 	</bean> -->
 	
 	<!-- 5.2、启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
 	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
  		<property name="cacheSeconds" value="0" />
  		<property name="messageConverters">
   			<list>
    			<ref bean="mappingJacksonHttpMessageConverter" />json转换器
   			</list>
  		</property>

 	</bean> -->
	
	<!-- 3、SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过200KB（value="200000"），下面参数设定为10M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="10000000"/>  
    </bean>
    
    <!-- 4、SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">user/error_fileupload</prop>  
            </props>  
        </property>  
    </bean>
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        
        <property name="defaultErrorView" value="500"></property>   默认为500，系统错误(error.jsp) 
		<property name="defaultStatusCode" value="404"></property>
        
        <property name="statusCodes">配置多个statusCode
  			<props>    
      			<prop key="error">error/500</prop>  error.jsp
      			<prop key="error1">error/404</prop>    error1.jsp
  			</props>    
		</property>

        <property name="exceptionMappings">  
            <props>  
                遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error/error_fileupload</prop>  
                这里你可以根据需要定义N多个错误异常转发
  				<prop key="java.sql.SQLException">error/error_fileupload</prop> 数据库错误(dbError.jsp)
  				<prop key="org.springframework.web.bind.ServletRequestBindingException">error/error_fileupload</prop> 参数绑定错误(如：必须参数没传递)(bizError.jsp)
  				<prop key="java.lang.IllegalArgumentException">error/error_fileupload</prop>  参数错误(bizError.jsp)
  				<prop key="org.springframework.validation.BindException">error/error_fileupload</prop>  参数类型有误(bizError.jsp)
  				<prop key="java.lang.Exception">error/error_fileupload</prop>  其他错误为'未定义错误'(unknowError.jsp) 
            </props>  
        </property>  
    </bean> -->
    
	
	<!-- 2、视图解析器，使用jsp或者jstl最适合使用这个类。基于Resources的解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <property name="prefix" value="/WEB-INF/page/" /> -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
</beans>

